<?php

class Test
    {

	/**
	 * Test
	 *
	 * @userconfig T_STRING "105" String code
	 * @userconfig T_STRINGS "105" String code
	 *
	 * @internalconst T_STRING Comment
	 *
	 * @return void
	 *
	 * @exceptioncode
	 */

	public function tester()
	    {
		$a = T_string;
		$b = FILE_APPEND;
		echo constant("self::tester");
	    } //end tester()


	/**
	 * Check if error should be suppressed
	 *
	 * @param array  $context is an array that points to the active symbol table at the point the error occurred
	 * @param string $error   contains the error message
	 * @param string $file    contains the filename that the error was raised in
	 *
	 * @return boolean true if error should not be logged
	 *
	 * @untranslatable LOGGER_SUPPRESS
	 * @untranslatable LOGGER_SUPPRESS_FILE
	 *
	 * @optionalconst LOGGER_SUPPRESS      "Too many connections" Regular expression to match in order to suppress logging
	 * @optionalconst LOGGER_SUPPRESS_FILE "MySQLdatabase.php"    Regular expression to match with file name in order to suppress logging from that file
	 */

	private static function _suppressLogging($context, $error, $file)
	    {
		return (isset($context["suppressLogging"]) === true && preg_match("/" . $context["suppressLogging"] . "/", $error) > 0) ||
		       (defined("LOGGER_SUPPRESS") === true && preg_match("/" . LOGGER_SUPPRESS . "/", $error) > 0) ||
		       (defined("LOGGER_SUPPRESS_FILE") === true && preg_match("/" . LOGGER_SUPPRESS_FILE . "/", $file) > 0);
	    } //end _suppressLogging()


    } //end class

?>
